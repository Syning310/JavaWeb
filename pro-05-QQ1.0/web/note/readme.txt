
1、需求
  ① 用户登录
  ② 登录成功，显示主界面。左侧显示好友列表；上端显示欢迎词。如果不是自己的空间。显示超链接：返回自己的空间。下端显示日志列表
  ③ 查看日志详情：
    - 日志本身的信息(作者头像、昵称、日志标题、日志内容、日志的日期)
    - 回复列表(回复者的头像、昵称、回复内容、回复日期等)
    - 主人回复信息
  ④ 删除日志
  ⑤ 删除特定回复
  ⑥ 删除特定主人回复
  ⑦ 添加日志、添加回复、添加主人回复
  ⑧ 点击左侧好友链接，进入好友的空间
  
2、数据库设计
  ① 抽取实体 ： 用户(用户登录信息、用户详情信息)、日志、回帖、主人回复
  
  ② 分析其中的属性 ：
    - 用户登录信息 ： 账号、密码、头像、昵称
    - 用户详情信息 ： 真实姓名、星座、血型、邮箱、手机号...
    - 日志 ： 标题、内容、日期、作者
    - 回复 ： 内容、日期、作者、日志
    - 主人回复 ： 内容、日期、作者、回复
  
  ③ 分析实体之间的关系
    - 用户 : 日志       1:1 PK
    - 日志 : 回复       1:N
    - 回复 : 主人回复    1:1 UK
    - 用户 : 好友       M:N

3、数据库的范式：
  ① 第一范式：列不可再分
  ② 第二范式：一张表只表达一层含义(只描述一件事情)
  ③ 第三范式：表中的每一列和主键都是直接依赖关系，而不是间接依赖
  
4、数据库设计的范式和数据库的查询性能很多时候是相悖的，需要根据实际的业务情况做选择：
  - 查询频率不高的情况下，更倾向于提高数据库的设计方式，从而提高存储效率
  - 查询频率较高的情况下，更倾向于降低数据库设计的范式，允许特定的冗余，从而提高查询的性能


5、left.html页面没有样式，同时数据也不展示，因为：直接去请求静态页面资源，那么并没有执行super.processTemplate()，也就是Thmeleaf没有起作用，所以使用th表达式没有效果
    解决方法就是新增一个 PageController类，添加方法 page 方法
    public string page(String page) {
        return page;   //  frame/left
    }
    目的是执行 super.processTemplate() 方法，让thymeleaf渲染



